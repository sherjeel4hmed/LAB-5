#include<iostream>
using namespace std;
class Engine{
    bool is_running=false;
public:
void start(){
    cout<<"Engine Started"<<endl;
    is_running=true;
}
void stop(){
    cout<<"Engine Stopped"<<endl;
    is_running=false;
}
};
class Car{
private:
string name;
string ID;
Engine engine;
public:
Car(){}
Car(string name, string ID): name(name),ID(ID){} 
void StartCar(){
    engine.start();
}
void StopCar(){
    engine.stop();
}
string getname(){
return name;
}
string getid(){
    return ID;
}
};
class Garage{
    Car **cars;
    int capacity;
    int count;
    public:
    Garage(int capacity) : capacity(capacity), count(0) {
        cars = new Car*[capacity];
        for (int i = 0; i < capacity; i++) {
            cars[i] = nullptr; 
        }
    }

    void ParkCar(Car *car) {
        if(count<capacity) {
            cars[count++]=car;
            cout << "Car parked in slot : " <<count<<" "<< car->getname() << endl;
        }else
        cout<<"Garage is full"<<endl;

}
void ListCars(){
    if(count==0){
    cout<<"No Car Listed"<<endl;
}else
for(int i=0;i<count;i++)
cout<<"Name: "<<cars[i]->getname()<<"| "<<"ID: "<<cars[i]->getid()<<endl;
}
};
int main(){
    Car car1("Toyota Corolla ","724");
    Car car2("Toyota Prius ","123");
    Garage garage(5);
    garage.ParkCar(&car1);
    garage.ParkCar(&car2);
    garage.ListCars();

    return 0;
}
